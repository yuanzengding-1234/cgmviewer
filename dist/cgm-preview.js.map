{"version":3,"file":"cgm-preview.js","sources":["../src/cgm-preview.ts"],"sourcesContent":["export interface CGMPreviewOptions {\n  width?: number;\n  height?: number;\n  format?: 'png' | 'jpeg' | 'webp';\n  quality?: number;\n  backgroundColor?: string;\n}\n\nexport interface CGMPreviewResult {\n  dataUrl: string;\n  blob: Blob;\n  width: number;\n  height: number;\n}\n\nexport class CGMPreview {\n  private module: any = null;\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private isInitialized = false;\n  private wasmPath: string;\n\n  constructor(wasmPath: string = './wasm/cgmparse.wasm') {\n    this.wasmPath = wasmPath;\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d')!;\n  }\n\n  /**\n   * Initialize the CGM preview engine\n   */\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    try {\n      // Load the WebAssembly module\n      this.module = await this.loadWasmModule();\n      this.setupWasmFunctions();\n      this.isInitialized = true;\n    } catch (error) {\n      throw new Error(`Failed to initialize CGM preview: ${error}`);\n    }\n  }\n\n  /**\n   * Convert a CGM file to an image\n   */\n  async fileToImage(file: File, options: CGMPreviewOptions = {}): Promise<CGMPreviewResult> {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n\n    const {\n      width = 1680,\n      height = 1270,\n      format = 'png',\n      quality = 0.9,\n      backgroundColor = 'white'\n    } = options;\n\n    try {\n      // Read file as ArrayBuffer\n      const arrayBuffer = await this.readFileAsArrayBuffer(file);\n      \n      // Setup canvas\n      this.setupCanvas(width, height, backgroundColor);\n      \n      // Process CGM file\n      await this.processCGMFile(arrayBuffer);\n      \n      // Generate image\n      return this.generateImage(format, quality);\n    } catch (error) {\n      throw new Error(`Failed to convert CGM file: ${error}`);\n    }\n  }\n\n  /**\n   * Convert CGM file from URL to image\n   */\n  async urlToImage(url: string, options: CGMPreviewOptions = {}): Promise<CGMPreviewResult> {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch CGM file: ${response.statusText}`);\n      }\n      \n      const blob = await response.blob();\n      const file = new File([blob], 'cgm-file.cgm', { type: 'application/octet-stream' });\n      \n      return this.fileToImage(file, options);\n    } catch (error) {\n      throw new Error(`Failed to load CGM from URL: ${error}`);\n    }\n  }\n\n  private async loadWasmModule(): Promise<any> {\n    // This would need to be adapted based on how the WASM module is built\n    // For now, we'll assume it's available globally or needs to be loaded\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = this.wasmPath.replace('.wasm', '.js');\n      script.onload = () => {\n        // Assuming the module is available as a global\n        if (typeof Module !== 'undefined') {\n          resolve(Module);\n        } else {\n          reject(new Error('WASM module not found'));\n        }\n      };\n      script.onerror = () => reject(new Error('Failed to load WASM module'));\n      document.head.appendChild(script);\n    });\n  }\n\n  private setupWasmFunctions(): void {\n    // Setup WASM function bindings based on the original code\n    this.module.sdi_printcgm = this.module.cwrap('sdi_printcgm', 'number', \n      ['number', 'number', 'number', 'number', 'number', 'number']);\n    this.module.set_screen_dimensions = this.module.cwrap('set_screen_dimensions', 'number', \n      ['number', 'number']);\n    this.module.wasm_set_viewport = this.module.cwrap('wasm_set_viewport', 'number', \n      ['number', 'number', 'number', 'number']);\n    this.module.sdi_set_picture = this.module.cwrap('sdi_set_picture', 'number', ['number']);\n    this.module.set_fit_transform = this.module.cwrap('set_fit_transform', 'number', \n      ['number', 'number']);\n    this.module.getvdcX = this.module.cwrap('getvdcX', 'number', ['number', 'number']);\n    this.module.getvdcY = this.module.cwrap('getvdcY', 'number', ['number', 'number']);\n  }\n\n  private setupCanvas(width: number, height: number, backgroundColor: string): void {\n    this.canvas.width = width;\n    this.canvas.height = height;\n    \n    // Set background\n    this.ctx.fillStyle = backgroundColor;\n    this.ctx.fillRect(0, 0, width, height);\n    \n    // Setup transformation matrix similar to original code\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.scale(0.1, 0.1);\n  }\n\n  private async readFileAsArrayBuffer(file: File): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as ArrayBuffer);\n      reader.onerror = () => reject(reader.error);\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  private async processCGMFile(arrayBuffer: ArrayBuffer): Promise<void> {\n    const uint8Array = new Uint8Array(arrayBuffer);\n    const size = uint8Array.length;\n    \n    // Allocate memory in WASM\n    const ptr = this.module._malloc(size);\n    this.module.HEAP8.set(uint8Array, ptr);\n    \n    try {\n      // Setup screen dimensions\n      const screenWidth = this.canvas.width * 10;\n      const screenHeight = this.canvas.height * 10;\n      this.module.set_screen_dimensions(screenWidth, screenHeight);\n      \n      // Set picture mode\n      this.module.sdi_set_picture(1);\n      \n      // Set fit transform\n      this.module.set_fit_transform(10000, 10000);\n      \n      // Process the CGM file\n      const status = this.module.sdi_printcgm(ptr, size, 0, 0, 0, 1);\n      \n      if (status !== 0) {\n        throw new Error(`CGM processing failed with status: ${status}`);\n      }\n    } finally {\n      // Free allocated memory\n      this.module._free(ptr);\n    }\n  }\n\n  private generateImage(format: string, quality: number): CGMPreviewResult {\n    const mimeType = `image/${format}`;\n    const dataUrl = this.canvas.toDataURL(mimeType, quality);\n    \n    // Convert to blob\n    return new Promise((resolve) => {\n      this.canvas.toBlob((blob) => {\n        resolve({\n          dataUrl,\n          blob: blob!,\n          width: this.canvas.width,\n          height: this.canvas.height\n        });\n      }, mimeType, quality);\n    }) as any; // Type assertion for simplicity\n  }\n\n  /**\n   * Cleanup resources\n   */\n  dispose(): void {\n    this.canvas.remove();\n    this.isInitialized = false;\n  }\n}\n\n// Export convenience function\nexport async function cgmToImage(\n  file: File, \n  options: CGMPreviewOptions = {}\n): Promise<CGMPreviewResult> {\n  const preview = new CGMPreview();\n  try {\n    return await preview.fileToImage(file, options);\n  } finally {\n    preview.dispose();\n  }\n}"],"names":[],"mappings":"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"}